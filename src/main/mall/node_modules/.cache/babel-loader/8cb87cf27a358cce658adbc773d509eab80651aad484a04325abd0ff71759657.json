{"ast":null,"code":"var _jsxFileName = \"/Users/gwongeon-o/Desktop/React/react-spring/src/main/mall/src/pages/todo/IndexPage.js\",\n  _s = $RefreshSig$();\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst indexPage = () => {\n  _s();\n  //React-router 를 이용해서 고정된 링크로 이동할 때도 있지만, 대부분 상황에따라 동적으로 데이터를 처리해서 이동하는 경우가 더많음\n  //이럴때는 <Navigate>나 <Link> 대신 useNavigate() 를 이용해서 해결\n  const navigate = useNavigate();\n  const handleClickList = useCallback(() => {\n    navigate({\n      pathname: 'list'\n    });\n  });\n  const handleClickAdd = useCallback(() => {\n    navigate({\n      pathname: 'add'\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(BasicLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex m-2 p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl m-1 p-2 w-20 font-extrabold text-center underline\",\n        onClick: handleClickList,\n        children: \"LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl m-1 p-2 w-20 font-extrabold text-center underline\",\n        onClick: handleClickAdd,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap w-full\",\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(indexPage, \"mroQebpvPor1ZOgDzSy1pobzTXk=\", false, function () {\n  return [useNavigate];\n});\nexport default indexPage;","map":{"version":3,"names":["Outlet","useNavigate","BasicLayout","useCallback","jsxDEV","_jsxDEV","indexPage","_s","navigate","handleClickList","pathname","handleClickAdd","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gwongeon-o/Desktop/React/react-spring/src/main/mall/src/pages/todo/IndexPage.js"],"sourcesContent":["import {Outlet, useNavigate} from \"react-router-dom\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\nimport {useCallback} from \"react\";\n\nconst indexPage = () => {\n  //React-router 를 이용해서 고정된 링크로 이동할 때도 있지만, 대부분 상황에따라 동적으로 데이터를 처리해서 이동하는 경우가 더많음\n  //이럴때는 <Navigate>나 <Link> 대신 useNavigate() 를 이용해서 해결\n  const navigate = useNavigate();\n  const handleClickList = useCallback(() =>{\n    navigate({pathname: 'list'})\n  });\n  const handleClickAdd = useCallback(() => {\n    navigate({pathname: 'add'})\n  });\n\n\n  return(\n    <BasicLayout>\n      <div className=\"w-full flex m-2 p-2\">\n        <div className=\"text-xl m-1 p-2 w-20 font-extrabold text-center underline\" onClick={handleClickList}>\n          LIST\n        </div>\n        <div className=\"text-xl m-1 p-2 w-20 font-extrabold text-center underline\" onClick={handleClickAdd}>\n          ADD\n        </div>\n      </div>\n      <div className=\"flex flex-wrap w-full\">\n        <Outlet />\n      </div>\n    </BasicLayout>\n  )\n}\nexport default indexPage;"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,WAAW,QAAO,kBAAkB;AACpD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAAQC,WAAW,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,eAAe,GAAGN,WAAW,CAAC,MAAK;IACvCK,QAAQ,CAAC;MAACE,QAAQ,EAAE;IAAM,CAAC,CAAC;EAC9B,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGR,WAAW,CAAC,MAAM;IACvCK,QAAQ,CAAC;MAACE,QAAQ,EAAE;IAAK,CAAC,CAAC;EAC7B,CAAC,CAAC;EAGF,oBACEL,OAAA,CAACH,WAAW;IAAAU,QAAA,gBACVP,OAAA;MAAKQ,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAClCP,OAAA;QAAKQ,SAAS,EAAC,2DAA2D;QAACC,OAAO,EAAEL,eAAgB;QAAAG,QAAA,EAAC;MAErG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNb,OAAA;QAAKQ,SAAS,EAAC,2DAA2D;QAACC,OAAO,EAAEH,cAAe;QAAAC,QAAA,EAAC;MAEpG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,uBAAuB;MAAAD,QAAA,eACpCP,OAAA,CAACL,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB,CAAC;AAAAX,EAAA,CA3BKD,SAAS;EAAA,QAGIL,WAAW;AAAA;AAyB9B,eAAeK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}